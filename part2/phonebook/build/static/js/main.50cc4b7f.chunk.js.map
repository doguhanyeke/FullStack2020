{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","PersonForm","addPerson","onSubmit","handleNameChange","onChange1","handleNumberChange","onChange2","newName","value1","newNumber","value2","value","type","Person","person","per","deletePerson","key","name","number","onClick","Persons","filteredPersons","map","id","baseUrl","axios","get","personObject","post","put","delete","Notification","message","className","console","log","App","useState","persons","setPersons","setNewName","setNewNumber","searchWord","setSearchWord","errorMes","setErrorMes","errorType","setErrorType","useEffect","personService","then","response","data","filter","persond","toLowerCase","includes","event","target","preventDefault","reduce","result","concat","window","confirm","find","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50cc4b7f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n        filter shown with <input onChange={props.onChange}></input>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  const addPerson = props.onSubmit\n  const handleNameChange = props.onChange1\n  const handleNumberChange = props.onChange2\n  const newName = props.value1\n  const newNumber = props.value2\n  return (\n      <form onSubmit={addPerson} >\n      <div>\n        name: <input onChange={handleNameChange} value={newName}/>\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (props) => {\n  const person = props.per\n  const deletePerson = props.deletePerson\n  return (\n    <li key={person.name}>\n      {person.name} {person.number}\n      <button onClick={deletePerson} > delete </button>\n    </li>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = (props) => {\n    const filteredPersons = props.filteredPersons\n    const deletePerson = props.deletePerson\n    return (\n      <ul>\n        {filteredPersons.map(person => \n        <Person per={person} \n        key={person.name}\n        deletePerson={() => deletePerson(person.id)}\n        />)}\n      </ul>\n    )\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = 'https://shrouded-earth-30493.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (personObject) => {\n    return axios.post(baseUrl, personObject)\n}\n\nconst update = (id, personObject) => {\n    return axios.put(`${baseUrl}/${id}`, personObject)\n}\n\nconst deleteP = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update, deleteP}","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({ message, className }) => {\n    console.log(\"here\", className)\n    if(message === null){\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/person'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchWord, setSearchWord ] = useState('')\n  const [ errorMes, setErrorMes ] = useState( null )\n  const [ errorType, setErrorType ] = useState( null )\n\n  useEffect(() => {\n      personService\n      .getAll()\n      .then(response => {\n        setPersons(\n          response.data.filter(\n            persond => 'name' in persond\n          ))\n      })\n    },[])\n\n  const handleNumberChange = (event) => {\n    /*console.log(\"number changed\", event.target.value)*/\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    /*console.log('name changed', event.target.value)*/\n    setNewName(event.target.value)\n  }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    let notExist = persons.reduce((result, person) => {\n      if (person.name === newName) {\n        result = false\n      }\n      return result\n    }, true)\n    if (!notExist) {\n      if (window.confirm(`${newName} is already added to phonebook,\n      replace the old number with a new one?`)) {\n        setErrorType( 'success' )\n        const id = persons.find(p => p.name === newName).id\n        personService\n        .update(id, {name: newName, number: newNumber})\n        .then(response => \n          setPersons( persons.map(p => \n            p.id === response.data.id ? response.data : p\n            ) ))\n        .catch(error => {\n          setErrorType( 'error' )\n          setErrorMes( `Information of ${newName} has already been removed from server` )\n          console.log(error)\n        })\n      }\n\n\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n      .create(personObject)\n      .then(response => {\n        setErrorMes(`Added ${newName}`)\n        setErrorType('success')\n        console.log(\"response data\", response.data)\n        setPersons( persons.concat(response.data) )\n      })\n    }\n    setNewNumber('')\n    setNewName('')\n  }\n\n  const deletePerson = (id) => {\n    const name = persons.find(p => p.id === id).name\n    if (window.confirm(`Delete ${name}`)) { \n      setErrorType( 'error' )\n      personService\n      .deleteP(id)\n      .then(response => {\n        setErrorMes( `Information of ${name} has already been removed from server` )\n        setPersons( persons.filter(person =>\n          person.id !== id))\n      })\n    }\n  }\n\n  const filterPersons = (event) => {\n    setSearchWord(event.target.value)\n  }\n\n  const filteredPersons = persons.filter( person => {\n    if (person.name) {\n      return person.name.toLowerCase().includes(searchWord) \n    }\n  }\n  )    \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMes} className={errorType} />\n      <Filter onChange={filterPersons}/>\n      <h3>Add a new</h3>\n      <PersonForm onSubmit={addPerson} \n        onChange1={handleNameChange}\n        value1={newName}\n        onChange2={handleNumberChange}\n        value2={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons \n      filteredPersons={filteredPersons} \n      deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}